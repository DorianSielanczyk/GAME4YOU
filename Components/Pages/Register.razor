@page "/register"
@using GAME4YOU.Entities
@using GAME4YOU.Services
@inject AccountService AccountService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h3>Rejestracja</h3>

@if (!string.IsNullOrEmpty(Message))
{
    <p style="color:red;">@Message</p>
}

<EditForm Model="@newUser" OnValidSubmit="@HandleRegister" FormName="RegisterForm">
    <DataAnnotationsValidator />

    <div>
        <label>Email:</label>
        <InputText @bind-Value="newUser.Email" type="email" />
        <ValidationMessage For="@(() => newUser.Email)" />
    </div>

    <div>
        <label>Hasło:</label>
        <InputText @bind-Value="newUser.Password" type="password" />
        <ValidationMessage For="@(() => newUser.Password)" />
    </div>

    <div>
        <label>Imię:</label>
        <InputText @bind-Value="newUser.FirstName" />
        <ValidationMessage For="@(() => newUser.FirstName)" />
    </div>

    <div>
        <label>Nazwisko:</label>
        <InputText @bind-Value="newUser.LastName" />
        <ValidationMessage For="@(() => newUser.LastName)" />
    </div>

    <button type="submit">Zarejestruj</button>
</EditForm>

@code {
    private Users newUser = new Users();  
    private string Message = string.Empty;

    private async Task HandleRegister()
    {
        bool result = await AccountService.RegisterUser(newUser);
        if (result)
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            Message = "Użytkownik już istnieje.";
        }
    }
}